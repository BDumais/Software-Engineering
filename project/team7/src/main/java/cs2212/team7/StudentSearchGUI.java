package cs2212.team7;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.Iterator;
import java.util.LinkedList;
import javax.swing.JPanel;

/**
 * GUI class to search for a student in a database
 * @author Ben
 */
public class StudentSearchGUI extends javax.swing.JFrame implements ActionListener {

    //Attribute for course we are working with currently
    private Course course;
    
    /**
     * Creates new form StudentSearch
     * @param c course we are working with
     */
    public StudentSearchGUI(Course c) {
        initComponents();
        populateSelector();
        course = c;
    }

    /**
     * Method to handle button events
     * @param e 
     */
    @Override
    public void actionPerformed(ActionEvent e) {
        //Get the source of the button
        
        //Source is Search button
        if(e.getSource() == searchButton){
            //Get text from search box
            String query = searchText.getText();
            //Lookup this student
            boolean exists = GUIHelper.lookupStudent(query);
            if(exists){ //If it exists, indicate so
                Student s = GUIHelper.fetchStudent(query);
                searchOutput.setText("Match found: " + s.getFName() + " " + s.getLName());
            }
            else //Otherwise indicate no student was found
                searchOutput.setText("No matches found");
        }
        
        //Source is add button for search
        else if(e.getSource() == searchAddButton){
            //Get text from search box
            String query = searchText.getText();
            if(GUIHelper.lookupStudent(query)){ //Lookup student
                //If student exists, try to enroll and indicate success
                if(GUIHelper.enroll(query, course))
                    searchOutput.setText("Student added successfully"); //update output box
                else
                    searchOutput.setText("Student already exists within this course");
            }
            else //Otherwise indicate that the current search query does not yeild a result
                searchOutput.setText("Student ID not found, no student added");
            
        }
        
        //Source is add selected
        else if(e.getSource() == addSelectedButton){
            //Get selection from box
            String selection = (String)studentBox.getSelectedItem();
            //Trim it to get just the student ID (last 9 digits)
            String id = selection.substring(selection.length()- 9);
            //try to enroll and indicate result
            if(GUIHelper.enroll(id, course))
                selectedOutput.setText("Student added successfully");  
            else
                selectedOutput.setText("Student already exists within this course");
        }
            
    }
    
    /**
     * Get method for the JPanel
     * @return JPanel of this GUI
     */
    public JPanel getPanel(){
        return mainPanel;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        searchLabel = new javax.swing.JLabel();
        searchText = new javax.swing.JTextField();
        searchOutput = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        orLabel = new javax.swing.JLabel();
        browseLabel = new javax.swing.JLabel();
        studentBox = new javax.swing.JComboBox();
        searchAddButton = new javax.swing.JButton();
        addSelectedButton = new javax.swing.JButton();
        selectedOutput = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        searchLabel.setText("Enter a Student ID:");

        searchText.setText("Enter Student Number Here");

        searchOutput.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        searchOutput.setText("Search for student using above controls");

        searchButton.setText("Search");
        searchButton.addActionListener(this);

        orLabel.setText("- OR -");

        browseLabel.setText("Browse all Students");

        searchAddButton.setText("Add");
        searchAddButton.addActionListener(this);

        addSelectedButton.setText("Add");
        addSelectedButton.addActionListener(this);

        selectedOutput.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        selectedOutput.setText("Add Student Above");

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchText)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                                .addComponent(searchOutput, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(searchAddButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(searchLabel)
                                    .addComponent(browseLabel))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(studentBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addSelectedButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addComponent(orLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(selectedOutput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchButton)
                    .addComponent(searchOutput))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchAddButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(orLabel)
                .addGap(3, 3, 3)
                .addComponent(browseLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(studentBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addSelectedButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selectedOutput)
                .addGap(96, 96, 96))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 209, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addSelectedButton;
    private javax.swing.JLabel browseLabel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel orLabel;
    private javax.swing.JButton searchAddButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JLabel searchOutput;
    private javax.swing.JTextField searchText;
    private javax.swing.JLabel selectedOutput;
    private javax.swing.JComboBox studentBox;
    // End of variables declaration//GEN-END:variables

    /**
     * Method to populate selector box with students from database
     */
    private void populateSelector() {
        try {
            //Get list of students from database
            LinkedList students = PersistenceManager.readStudents();
            //If it has students, add all of them
            if(students.size() != 0){
                Iterator it = students.iterator(); //Get list iterator
                while(it.hasNext()){                //Loop through
                    Student s = (Student)it.next(); //Get current student
                    //Create input text for selection box
                    String input = s.getLName() + ", " + s.getFName() + " - " + s.getStudentNum();
                    studentBox.addItem(input); //Add it
                }
            }
            else //If list was empty, put a message in the box
                studentBox.addItem("No students found");
            
            //If any errors are thrown catch them and print a message in the box
        } catch (IOException | ClassNotFoundException ex) {
            studentBox.addItem("No students found");
        }
    }

}
